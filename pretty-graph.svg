<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>libsystem_malloc.dylib`default_zone_free_definite_size (13 samples, 0.02%)</title><rect x="1069.6" y="133" width="0.3" height="15.0" fill="rgb(251,119,45)" rx="2" ry="2" />
<text  x="1072.64" y="143.5" ></text>
</g>
<g >
<title>adoc`0x1 (63,198 samples, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(242,221,39)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >adoc`0x1</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (7 samples, 0.01%)</title><rect x="1125.5" y="117" width="0.1" height="15.0" fill="rgb(214,4,53)" rx="2" ry="2" />
<text  x="1128.51" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (390 samples, 0.62%)</title><rect x="1130.5" y="85" width="7.2" height="15.0" fill="rgb(205,144,17)" rx="2" ry="2" />
<text  x="1133.46" y="95.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (42 samples, 0.07%)</title><rect x="1162.7" y="117" width="0.8" height="15.0" fill="rgb(220,210,12)" rx="2" ry="2" />
<text  x="1165.74" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (38 samples, 0.06%)</title><rect x="1186.4" y="69" width="0.7" height="15.0" fill="rgb(242,117,8)" rx="2" ry="2" />
<text  x="1189.42" y="79.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (117 samples, 0.19%)</title><rect x="81.8" y="101" width="2.2" height="15.0" fill="rgb(233,224,39)" rx="2" ry="2" />
<text  x="84.85" y="111.5" ></text>
</g>
<g >
<title>adoc`alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h686653194be36d1f (130 samples, 0.21%)</title><rect x="1060.2" y="133" width="2.4" height="15.0" fill="rgb(248,152,22)" rx="2" ry="2" />
<text  x="1063.20" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_no_lock (99 samples, 0.16%)</title><rect x="1078.4" y="117" width="1.8" height="15.0" fill="rgb(217,172,42)" rx="2" ry="2" />
<text  x="1081.36" y="127.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (7 samples, 0.01%)</title><rect x="1152.3" y="85" width="0.1" height="15.0" fill="rgb(252,188,52)" rx="2" ry="2" />
<text  x="1155.30" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="1166.5" y="133" width="0.1" height="15.0" fill="rgb(239,83,28)" rx="2" ry="2" />
<text  x="1169.49" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (403 samples, 0.64%)</title><rect x="1130.2" y="101" width="7.5" height="15.0" fill="rgb(228,220,0)" rx="2" ry="2" />
<text  x="1133.21" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="1129.1" y="101" width="0.2" height="15.0" fill="rgb(240,2,46)" rx="2" ry="2" />
<text  x="1132.07" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (63 samples, 0.10%)</title><rect x="1072.9" y="101" width="1.2" height="15.0" fill="rgb(211,178,37)" rx="2" ry="2" />
<text  x="1075.87" y="111.5" ></text>
</g>
<g >
<title>adoc`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::he1f612f637d0bb0f (63,190 samples, 99.99%)</title><rect x="10.0" y="213" width="1179.9" height="15.0" fill="rgb(237,152,21)" rx="2" ry="2" />
<text  x="13.02" y="223.5" >adoc`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::he1f612f637d0bb0f</text>
</g>
<g >
<title>libsystem_malloc.dylib`free_tiny (277 samples, 0.44%)</title><rect x="1075.0" y="133" width="5.2" height="15.0" fill="rgb(251,206,14)" rx="2" ry="2" />
<text  x="1078.04" y="143.5" ></text>
</g>
<g >
<title>adoc`std::rt::lang_start_internal::h05aa3173240f4b0d (63,190 samples, 99.99%)</title><rect x="10.0" y="229" width="1179.9" height="15.0" fill="rgb(239,43,36)" rx="2" ry="2" />
<text  x="13.02" y="239.5" >adoc`std::rt::lang_start_internal::h05aa3173240f4b0d</text>
</g>
<g >
<title>adoc`__rust_alloc (9 samples, 0.01%)</title><rect x="11.3" y="165" width="0.1" height="15.0" fill="rgb(230,67,17)" rx="2" ry="2" />
<text  x="14.27" y="175.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (334 samples, 0.53%)</title><rect x="1063.4" y="133" width="6.2" height="15.0" fill="rgb(224,217,8)" rx="2" ry="2" />
<text  x="1066.41" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (8 samples, 0.01%)</title><rect x="1189.5" y="165" width="0.1" height="15.0" fill="rgb(222,121,48)" rx="2" ry="2" />
<text  x="1192.46" y="175.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (21 samples, 0.03%)</title><rect x="1152.0" y="101" width="0.4" height="15.0" fill="rgb(219,211,12)" rx="2" ry="2" />
<text  x="1155.04" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (70 samples, 0.11%)</title><rect x="1185.8" y="85" width="1.3" height="15.0" fill="rgb(210,49,24)" rx="2" ry="2" />
<text  x="1188.82" y="95.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (200 samples, 0.32%)</title><rect x="1120.1" y="117" width="3.7" height="15.0" fill="rgb(226,77,27)" rx="2" ry="2" />
<text  x="1123.11" y="127.5" ></text>
</g>
<g >
<title>adoc`__rust_alloc (7 samples, 0.01%)</title><rect x="1019.9" y="149" width="0.1" height="15.0" fill="rgb(244,166,44)" rx="2" ry="2" />
<text  x="1022.87" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (7 samples, 0.01%)</title><rect x="1074.1" y="117" width="0.1" height="15.0" fill="rgb(217,112,30)" rx="2" ry="2" />
<text  x="1077.05" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`medium_malloc_should_clear (112 samples, 0.18%)</title><rect x="81.9" y="85" width="2.1" height="15.0" fill="rgb(215,68,32)" rx="2" ry="2" />
<text  x="84.94" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free_tiny (423 samples, 0.67%)</title><rect x="1166.6" y="149" width="7.9" height="15.0" fill="rgb(253,131,16)" rx="2" ry="2" />
<text  x="1169.64" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.02%)</title><rect x="1129.3" y="101" width="0.2" height="15.0" fill="rgb(217,142,52)" rx="2" ry="2" />
<text  x="1132.30" y="111.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (13 samples, 0.02%)</title><rect x="1163.3" y="101" width="0.2" height="15.0" fill="rgb(231,214,17)" rx="2" ry="2" />
<text  x="1166.28" y="111.5" ></text>
</g>
<g >
<title>adoc`_$LT$std..io..stdio..StdoutLock$u20$as$u20$std..io..Write$GT$::write_all::h356cf099e2cce043 (6 samples, 0.01%)</title><rect x="1189.0" y="101" width="0.1" height="15.0" fill="rgb(231,208,35)" rx="2" ry="2" />
<text  x="1191.97" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (1,202 samples, 1.90%)</title><rect x="1080.6" y="117" width="22.4" height="15.0" fill="rgb(210,175,22)" rx="2" ry="2" />
<text  x="1083.60" y="127.5" >l..</text>
</g>
<g >
<title>adoc`core::fmt::write::h2d5ecb4b9764759c (7 samples, 0.01%)</title><rect x="1189.0" y="133" width="0.1" height="15.0" fill="rgb(216,148,19)" rx="2" ry="2" />
<text  x="1191.95" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (52 samples, 0.08%)</title><rect x="1136.8" y="69" width="0.9" height="15.0" fill="rgb(207,187,33)" rx="2" ry="2" />
<text  x="1139.77" y="79.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_insert_hash::h6c7a16b12959b523 (319 samples, 0.50%)</title><rect x="1153.1" y="149" width="5.9" height="15.0" fill="rgb(207,1,28)" rx="2" ry="2" />
<text  x="1156.09" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="1102.9" y="101" width="0.1" height="15.0" fill="rgb(235,38,33)" rx="2" ry="2" />
<text  x="1105.93" y="111.5" ></text>
</g>
<g >
<title>adoc`alloc::raw_vec::finish_grow::h910ecb32dd4d8f4e (120 samples, 0.19%)</title><rect x="1060.3" y="117" width="2.2" height="15.0" fill="rgb(237,184,15)" rx="2" ry="2" />
<text  x="1063.27" y="127.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::insert::hc56c3ad887ea994c (580 samples, 0.92%)</title><rect x="1141.6" y="149" width="10.9" height="15.0" fill="rgb(205,81,21)" rx="2" ry="2" />
<text  x="1144.64" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (1,060 samples, 1.68%)</title><rect x="1083.1" y="101" width="19.8" height="15.0" fill="rgb(236,73,40)" rx="2" ry="2" />
<text  x="1086.14" y="111.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (25 samples, 0.04%)</title><rect x="1115.4" y="133" width="0.5" height="15.0" fill="rgb(218,197,35)" rx="2" ry="2" />
<text  x="1118.39" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (84 samples, 0.13%)</title><rect x="1164.9" y="133" width="1.6" height="15.0" fill="rgb(233,163,54)" rx="2" ry="2" />
<text  x="1167.92" y="143.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (428 samples, 0.68%)</title><rect x="1115.9" y="133" width="7.9" height="15.0" fill="rgb(233,154,45)" rx="2" ry="2" />
<text  x="1118.86" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (66 samples, 0.10%)</title><rect x="1060.5" y="53" width="1.2" height="15.0" fill="rgb(237,102,54)" rx="2" ry="2" />
<text  x="1063.48" y="63.5" ></text>
</g>
<g >
<title>libdyld.dylib`start (63,197 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(239,100,52)" rx="2" ry="2" />
<text  x="13.02" y="271.5" >libdyld.dylib`start</text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.01%)</title><rect x="1123.8" y="133" width="0.2" height="15.0" fill="rgb(225,189,29)" rx="2" ry="2" />
<text  x="1126.85" y="143.5" ></text>
</g>
<g >
<title>adoc`adoc::p20::get_number::h507fdc4eef9c0f58 (4,469 samples, 7.07%)</title><rect x="1020.1" y="149" width="83.4" height="15.0" fill="rgb(219,132,50)" rx="2" ry="2" />
<text  x="1023.05" y="159.5" >adoc`adoc..</text>
</g>
<g >
<title>libsystem_malloc.dylib`free_medium (46 samples, 0.07%)</title><rect x="1074.2" y="133" width="0.8" height="15.0" fill="rgb(232,35,53)" rx="2" ry="2" />
<text  x="1077.18" y="143.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::haad3fab9782a6220 (8 samples, 0.01%)</title><rect x="1188.8" y="165" width="0.2" height="15.0" fill="rgb(221,139,49)" rx="2" ry="2" />
<text  x="1191.81" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`medium_size (67 samples, 0.11%)</title><rect x="1070.7" y="117" width="1.2" height="15.0" fill="rgb(208,74,22)" rx="2" ry="2" />
<text  x="1073.65" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (75 samples, 0.12%)</title><rect x="1165.1" y="117" width="1.4" height="15.0" fill="rgb(230,156,34)" rx="2" ry="2" />
<text  x="1168.09" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (124 samples, 0.20%)</title><rect x="81.7" y="117" width="2.3" height="15.0" fill="rgb(210,195,33)" rx="2" ry="2" />
<text  x="84.72" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (72 samples, 0.11%)</title><rect x="1060.4" y="85" width="1.3" height="15.0" fill="rgb(249,128,12)" rx="2" ry="2" />
<text  x="1063.36" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free (13 samples, 0.02%)</title><rect x="1189.1" y="165" width="0.3" height="15.0" fill="rgb(212,176,17)" rx="2" ry="2" />
<text  x="1192.14" y="175.5" ></text>
</g>
<g >
<title>adoc`_$LT$hashbrown..raw..RawIntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h08ff0475d5f68c2f (1,156 samples, 1.83%)</title><rect x="57.5" y="149" width="21.6" height="15.0" fill="rgb(248,153,22)" rx="2" ry="2" />
<text  x="60.54" y="159.5" >a..</text>
</g>
<g >
<title>adoc`std::sys_common::backtrace::__rust_begin_short_backtrace::headdfe89a99a535c (63,190 samples, 99.99%)</title><rect x="10.0" y="197" width="1179.9" height="15.0" fill="rgb(222,10,42)" rx="2" ry="2" />
<text  x="13.02" y="207.5" >adoc`std::sys_common::backtrace::__rust_begin_short_backtrace::headdfe89a99a535c</text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.02%)</title><rect x="1103.1" y="133" width="0.2" height="15.0" fill="rgb(242,209,30)" rx="2" ry="2" />
<text  x="1106.12" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,046 samples, 1.66%)</title><rect x="1083.4" y="85" width="19.5" height="15.0" fill="rgb(226,33,43)" rx="2" ry="2" />
<text  x="1086.40" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (9 samples, 0.01%)</title><rect x="1187.4" y="149" width="0.2" height="15.0" fill="rgb(210,210,30)" rx="2" ry="2" />
<text  x="1190.39" y="159.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (39 samples, 0.06%)</title><rect x="1140.9" y="149" width="0.7" height="15.0" fill="rgb(232,123,31)" rx="2" ry="2" />
<text  x="1143.91" y="159.5" ></text>
</g>
<g >
<title>adoc`_$LT$hashbrown..raw..RawTable$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$::clone::h0bc18c1ebf8dc301 (50,258 samples, 79.52%)</title><rect x="81.3" y="149" width="938.4" height="15.0" fill="rgb(222,14,28)" rx="2" ry="2" />
<text  x="84.34" y="159.5" >adoc`_$LT$hashbrown..raw..RawTable$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$::clone::h0bc18c1ebf8dc301</text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (72 samples, 0.11%)</title><rect x="1060.4" y="101" width="1.3" height="15.0" fill="rgb(213,8,41)" rx="2" ry="2" />
<text  x="1063.36" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_no_lock (50 samples, 0.08%)</title><rect x="1128.6" y="117" width="0.9" height="15.0" fill="rgb(228,16,52)" rx="2" ry="2" />
<text  x="1131.59" y="127.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (50,112 samples, 79.29%)</title><rect x="84.1" y="133" width="935.6" height="15.0" fill="rgb(213,163,52)" rx="2" ry="2" />
<text  x="87.07" y="143.5" >libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_no_lock (98 samples, 0.16%)</title><rect x="1172.7" y="133" width="1.8" height="15.0" fill="rgb(243,219,25)" rx="2" ry="2" />
<text  x="1175.71" y="143.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::h450abddfe57ba61e (65 samples, 0.10%)</title><rect x="1151.3" y="133" width="1.2" height="15.0" fill="rgb(224,23,15)" rx="2" ry="2" />
<text  x="1154.26" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_realloc (20 samples, 0.03%)</title><rect x="1062.0" y="69" width="0.4" height="15.0" fill="rgb(229,59,53)" rx="2" ry="2" />
<text  x="1064.99" y="79.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_realloc (29 samples, 0.05%)</title><rect x="1061.8" y="85" width="0.6" height="15.0" fill="rgb(237,27,14)" rx="2" ry="2" />
<text  x="1064.84" y="95.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::h450abddfe57ba61e (130 samples, 0.21%)</title><rect x="1159.0" y="149" width="2.5" height="15.0" fill="rgb(211,129,10)" rx="2" ry="2" />
<text  x="1162.04" y="159.5" ></text>
</g>
<g >
<title>adoc`std::io::stdio::_print::h2fa43caf447f53e2 (7 samples, 0.01%)</title><rect x="1189.0" y="165" width="0.1" height="15.0" fill="rgb(210,169,19)" rx="2" ry="2" />
<text  x="1191.95" y="175.5" ></text>
</g>
<g >
<title>adoc`adoc::p20::main::h2399f3a7493a6155 (63,188 samples, 99.98%)</title><rect x="10.0" y="181" width="1179.8" height="15.0" fill="rgb(227,59,8)" rx="2" ry="2" />
<text  x="13.02" y="191.5" >adoc`adoc::p20::main::h2399f3a7493a6155</text>
</g>
<g >
<title>libsystem_kernel.dylib`__exit (7 samples, 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(223,217,13)" rx="2" ry="2" />
<text  x="1192.87" y="255.5" ></text>
</g>
<g >
<title>adoc`adoc::p20::step::hda229c9a7676ecad (63,032 samples, 99.74%)</title><rect x="11.6" y="165" width="1176.9" height="15.0" fill="rgb(215,199,0)" rx="2" ry="2" />
<text  x="14.64" y="175.5" >adoc`adoc::p20::step::hda229c9a7676ecad</text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="1187.9" y="149" width="0.1" height="15.0" fill="rgb(248,11,18)" rx="2" ry="2" />
<text  x="1190.85" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="1102.8" y="53" width="0.1" height="15.0" fill="rgb(249,46,38)" rx="2" ry="2" />
<text  x="1105.77" y="63.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`small_size (40 samples, 0.06%)</title><rect x="1071.9" y="117" width="0.7" height="15.0" fill="rgb(236,126,9)" rx="2" ry="2" />
<text  x="1074.90" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.03%)</title><rect x="1137.4" y="53" width="0.3" height="15.0" fill="rgb(247,187,3)" rx="2" ry="2" />
<text  x="1140.40" y="63.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (29 samples, 0.05%)</title><rect x="1173.6" y="117" width="0.5" height="15.0" fill="rgb(234,44,22)" rx="2" ry="2" />
<text  x="1176.59" y="127.5" ></text>
</g>
<g >
<title>adoc`_$LT$hashbrown..raw..RawIterHash$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::ha37aa9d7f01096c3 (20 samples, 0.03%)</title><rect x="10.8" y="165" width="0.4" height="15.0" fill="rgb(208,46,3)" rx="2" ry="2" />
<text  x="13.78" y="175.5" ></text>
</g>
<g >
<title>adoc`_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$::from_iter::h8909f5018f67e442 (37 samples, 0.06%)</title><rect x="10.1" y="165" width="0.6" height="15.0" fill="rgb(253,187,24)" rx="2" ry="2" />
<text  x="13.06" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.01%)</title><rect x="1137.9" y="133" width="0.1" height="15.0" fill="rgb(220,56,53)" rx="2" ry="2" />
<text  x="1140.85" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_malloc (97 samples, 0.15%)</title><rect x="1081.3" y="101" width="1.8" height="15.0" fill="rgb(242,61,36)" rx="2" ry="2" />
<text  x="1084.33" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (75 samples, 0.12%)</title><rect x="1072.6" y="117" width="1.5" height="15.0" fill="rgb(246,189,27)" rx="2" ry="2" />
<text  x="1075.65" y="127.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (128 samples, 0.20%)</title><rect x="1156.7" y="133" width="2.3" height="15.0" fill="rgb(245,211,32)" rx="2" ry="2" />
<text  x="1159.65" y="143.5" ></text>
</g>
<g >
<title>adoc`_$LT$hashbrown..raw..RawIterHash$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::ha37aa9d7f01096c3 (119 samples, 0.19%)</title><rect x="79.1" y="149" width="2.2" height="15.0" fill="rgb(226,207,22)" rx="2" ry="2" />
<text  x="82.12" y="159.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::reserve_rehash::hdae5a7173733788d (83 samples, 0.13%)</title><rect x="1162.0" y="133" width="1.5" height="15.0" fill="rgb(241,7,24)" rx="2" ry="2" />
<text  x="1164.99" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (27 samples, 0.04%)</title><rect x="1061.2" y="37" width="0.5" height="15.0" fill="rgb(226,63,5)" rx="2" ry="2" />
<text  x="1064.20" y="47.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`realloc (40 samples, 0.06%)</title><rect x="1061.8" y="101" width="0.7" height="15.0" fill="rgb(222,68,25)" rx="2" ry="2" />
<text  x="1064.76" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_malloc (30 samples, 0.05%)</title><rect x="1175.3" y="117" width="0.6" height="15.0" fill="rgb(221,35,39)" rx="2" ry="2" />
<text  x="1178.32" y="127.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.04%)</title><rect x="1188.1" y="149" width="0.4" height="15.0" fill="rgb(217,91,12)" rx="2" ry="2" />
<text  x="1191.08" y="159.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (8 samples, 0.01%)</title><rect x="1161.2" y="101" width="0.2" height="15.0" fill="rgb(212,16,39)" rx="2" ry="2" />
<text  x="1164.25" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (14 samples, 0.02%)</title><rect x="1062.1" y="37" width="0.2" height="15.0" fill="rgb(241,156,48)" rx="2" ry="2" />
<text  x="1065.08" y="47.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (52 samples, 0.08%)</title><rect x="1124.5" y="117" width="1.0" height="15.0" fill="rgb(234,22,21)" rx="2" ry="2" />
<text  x="1127.54" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (434 samples, 0.69%)</title><rect x="1094.8" y="69" width="8.1" height="15.0" fill="rgb(227,38,34)" rx="2" ry="2" />
<text  x="1097.83" y="79.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free_tiny (208 samples, 0.33%)</title><rect x="1125.6" y="133" width="3.9" height="15.0" fill="rgb(238,131,25)" rx="2" ry="2" />
<text  x="1128.64" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_malloc (18 samples, 0.03%)</title><rect x="1080.3" y="117" width="0.3" height="15.0" fill="rgb(215,171,7)" rx="2" ry="2" />
<text  x="1083.27" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (582 samples, 0.92%)</title><rect x="1176.3" y="101" width="10.8" height="15.0" fill="rgb(211,17,7)" rx="2" ry="2" />
<text  x="1179.26" y="111.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (49 samples, 0.08%)</title><rect x="1150.3" y="133" width="1.0" height="15.0" fill="rgb(222,147,28)" rx="2" ry="2" />
<text  x="1153.34" y="143.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (139 samples, 0.22%)</title><rect x="1067.0" y="117" width="2.6" height="15.0" fill="rgb(219,45,23)" rx="2" ry="2" />
<text  x="1070.05" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (602 samples, 0.95%)</title><rect x="1175.9" y="117" width="11.2" height="15.0" fill="rgb(213,134,28)" rx="2" ry="2" />
<text  x="1178.88" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (688 samples, 1.09%)</title><rect x="1174.5" y="149" width="12.9" height="15.0" fill="rgb(236,75,4)" rx="2" ry="2" />
<text  x="1177.54" y="159.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::reserve_rehash::hf9ff11e1be913a86 (88 samples, 0.14%)</title><rect x="1159.8" y="133" width="1.7" height="15.0" fill="rgb(209,79,44)" rx="2" ry="2" />
<text  x="1162.83" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (446 samples, 0.71%)</title><rect x="1129.5" y="133" width="8.4" height="15.0" fill="rgb(249,200,9)" rx="2" ry="2" />
<text  x="1132.52" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (1,227 samples, 1.94%)</title><rect x="1080.2" y="133" width="22.9" height="15.0" fill="rgb(249,151,36)" rx="2" ry="2" />
<text  x="1083.21" y="143.5" >l..</text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (44 samples, 0.07%)</title><rect x="1160.6" y="117" width="0.8" height="15.0" fill="rgb(253,31,42)" rx="2" ry="2" />
<text  x="1163.57" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.02%)</title><rect x="1187.1" y="117" width="0.3" height="15.0" fill="rgb(236,26,48)" rx="2" ry="2" />
<text  x="1190.12" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free (87 samples, 0.14%)</title><rect x="1124.0" y="133" width="1.6" height="15.0" fill="rgb(244,23,44)" rx="2" ry="2" />
<text  x="1127.02" y="143.5" ></text>
</g>
<g >
<title>adoc`adoc::p20::get_number::hffb7b77872dcf378 (1,853 samples, 2.93%)</title><rect x="1103.5" y="149" width="34.6" height="15.0" fill="rgb(206,143,4)" rx="2" ry="2" />
<text  x="1106.50" y="159.5" >ad..</text>
</g>
<g >
<title>adoc`__rust_dealloc (7 samples, 0.01%)</title><rect x="11.4" y="165" width="0.2" height="15.0" fill="rgb(216,178,20)" rx="2" ry="2" />
<text  x="14.44" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_free_definite_size (12 samples, 0.02%)</title><rect x="1189.6" y="165" width="0.2" height="15.0" fill="rgb(212,121,4)" rx="2" ry="2" />
<text  x="1192.61" y="175.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (41 samples, 0.06%)</title><rect x="1062.6" y="133" width="0.8" height="15.0" fill="rgb(243,74,22)" rx="2" ry="2" />
<text  x="1065.64" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (7 samples, 0.01%)</title><rect x="1103.3" y="133" width="0.2" height="15.0" fill="rgb(216,137,38)" rx="2" ry="2" />
<text  x="1106.33" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_malloc (15 samples, 0.02%)</title><rect x="1129.9" y="101" width="0.3" height="15.0" fill="rgb(219,197,52)" rx="2" ry="2" />
<text  x="1132.93" y="111.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::haad3fab9782a6220 (111 samples, 0.18%)</title><rect x="1161.5" y="149" width="2.0" height="15.0" fill="rgb(206,67,25)" rx="2" ry="2" />
<text  x="1164.47" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (70 samples, 0.11%)</title><rect x="1060.4" y="69" width="1.3" height="15.0" fill="rgb(208,79,12)" rx="2" ry="2" />
<text  x="1063.40" y="79.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free (230 samples, 0.36%)</title><rect x="1069.9" y="133" width="4.3" height="15.0" fill="rgb(248,4,5)" rx="2" ry="2" />
<text  x="1072.89" y="143.5" ></text>
</g>
<g >
<title>adoc`alloc::slice::merge_sort::hf4c7bd66931ad16c (149 samples, 0.24%)</title><rect x="1138.1" y="149" width="2.8" height="15.0" fill="rgb(226,101,38)" rx="2" ry="2" />
<text  x="1141.13" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free (152 samples, 0.24%)</title><rect x="1163.8" y="149" width="2.8" height="15.0" fill="rgb(211,90,11)" rx="2" ry="2" />
<text  x="1166.80" y="159.5" ></text>
</g>
<g >
<title>adoc`_$LT$$RF$std..io..stdio..Stdout$u20$as$u20$std..io..Write$GT$::write_fmt::h1e6a5219f9c88a91 (7 samples, 0.01%)</title><rect x="1189.0" y="149" width="0.1" height="15.0" fill="rgb(218,105,32)" rx="2" ry="2" />
<text  x="1191.95" y="159.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_insert_hash::h6c7a16b12959b523 (11 samples, 0.02%)</title><rect x="1188.6" y="165" width="0.2" height="15.0" fill="rgb(244,75,39)" rx="2" ry="2" />
<text  x="1191.58" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (17 samples, 0.03%)</title><rect x="1079.9" y="101" width="0.3" height="15.0" fill="rgb(207,82,23)" rx="2" ry="2" />
<text  x="1082.89" y="111.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (33 samples, 0.05%)</title><rect x="1152.5" y="149" width="0.6" height="15.0" fill="rgb(210,22,35)" rx="2" ry="2" />
<text  x="1155.47" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (49 samples, 0.08%)</title><rect x="1124.6" y="101" width="0.9" height="15.0" fill="rgb(209,26,27)" rx="2" ry="2" />
<text  x="1127.59" y="111.5" ></text>
</g>
<g >
<title>all (63,198 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(234,111,40)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (28 samples, 0.04%)</title><rect x="1079.4" y="101" width="0.5" height="15.0" fill="rgb(221,21,22)" rx="2" ry="2" />
<text  x="1082.37" y="111.5" ></text>
</g>
<g >
<title>adoc`_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$::write_str::hc79aa11862957b42 (6 samples, 0.01%)</title><rect x="1189.0" y="117" width="0.1" height="15.0" fill="rgb(232,128,22)" rx="2" ry="2" />
<text  x="1191.97" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_free_definite_size (16 samples, 0.03%)</title><rect x="1187.6" y="149" width="0.3" height="15.0" fill="rgb(205,136,43)" rx="2" ry="2" />
<text  x="1190.55" y="159.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::reserve_rehash::hf9ff11e1be913a86 (41 samples, 0.06%)</title><rect x="1151.7" y="117" width="0.8" height="15.0" fill="rgb(234,174,45)" rx="2" ry="2" />
<text  x="1154.70" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_free_definite_size (10 samples, 0.02%)</title><rect x="1163.6" y="149" width="0.2" height="15.0" fill="rgb(228,194,24)" rx="2" ry="2" />
<text  x="1166.62" y="159.5" ></text>
</g>
<g >
<title>adoc`main (63,190 samples, 99.99%)</title><rect x="10.0" y="245" width="1179.9" height="15.0" fill="rgb(241,5,40)" rx="2" ry="2" />
<text  x="13.02" y="255.5" >adoc`main</text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (435 samples, 0.69%)</title><rect x="1129.7" y="117" width="8.1" height="15.0" fill="rgb(215,179,11)" rx="2" ry="2" />
<text  x="1132.69" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (15 samples, 0.02%)</title><rect x="1062.1" y="53" width="0.2" height="15.0" fill="rgb(238,219,52)" rx="2" ry="2" />
<text  x="1065.06" y="63.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (22 samples, 0.03%)</title><rect x="1174.1" y="117" width="0.4" height="15.0" fill="rgb(247,51,9)" rx="2" ry="2" />
<text  x="1177.13" y="127.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`write (6 samples, 0.01%)</title><rect x="1189.0" y="85" width="0.1" height="15.0" fill="rgb(214,196,14)" rx="2" ry="2" />
<text  x="1191.97" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (663 samples, 1.05%)</title><rect x="1175.0" y="133" width="12.4" height="15.0" fill="rgb(222,144,12)" rx="2" ry="2" />
<text  x="1177.99" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (125 samples, 0.20%)</title><rect x="81.7" y="133" width="2.3" height="15.0" fill="rgb(254,196,41)" rx="2" ry="2" />
<text  x="84.70" y="143.5" ></text>
</g>
</g>
</svg>
