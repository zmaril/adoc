<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (128 samples, 0.20%)</title><rect x="1157.0" y="133" width="2.4" height="15.0" fill="rgb(241,11,2)" rx="2" ry="2" />
<text  x="1160.04" y="143.5" ></text>
</g>
<g >
<title>adoc`__rust_alloc (9 samples, 0.01%)</title><rect x="13.4" y="165" width="0.2" height="15.0" fill="rgb(252,75,21)" rx="2" ry="2" />
<text  x="16.45" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (124 samples, 0.19%)</title><rect x="82.9" y="117" width="2.2" height="15.0" fill="rgb(251,11,21)" rx="2" ry="2" />
<text  x="85.86" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_realloc (29 samples, 0.05%)</title><rect x="1045.9" y="85" width="0.5" height="15.0" fill="rgb(254,193,32)" rx="2" ry="2" />
<text  x="1048.85" y="95.5" ></text>
</g>
<g >
<title>adoc`__rust_dealloc (7 samples, 0.01%)</title><rect x="13.6" y="165" width="0.1" height="15.0" fill="rgb(231,174,49)" rx="2" ry="2" />
<text  x="16.61" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (38 samples, 0.06%)</title><rect x="1186.3" y="69" width="0.7" height="15.0" fill="rgb(213,10,30)" rx="2" ry="2" />
<text  x="1189.33" y="79.5" ></text>
</g>
<g >
<title>adoc`_$LT$hashbrown..raw..RawIntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h08ff0475d5f68c2f (1,156 samples, 1.80%)</title><rect x="59.1" y="149" width="21.2" height="15.0" fill="rgb(211,188,17)" rx="2" ry="2" />
<text  x="62.11" y="159.5" ></text>
</g>
<g >
<title>adoc`_$LT$hashbrown..raw..RawIterHash$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::ha37aa9d7f01096c3 (20 samples, 0.03%)</title><rect x="13.0" y="165" width="0.3" height="15.0" fill="rgb(214,58,5)" rx="2" ry="2" />
<text  x="15.97" y="175.5" ></text>
</g>
<g >
<title>libdyld.dylib`start (64,325 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(212,77,52)" rx="2" ry="2" />
<text  x="13.04" y="271.5" >libdyld.dylib`start</text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="1187.8" y="149" width="0.2" height="15.0" fill="rgb(233,109,43)" rx="2" ry="2" />
<text  x="1190.82" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.02%)</title><rect x="1187.0" y="117" width="0.3" height="15.0" fill="rgb(249,51,53)" rx="2" ry="2" />
<text  x="1190.03" y="127.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::h2f2d8bab51fe5684 (28 samples, 0.04%)</title><rect x="11.4" y="149" width="0.5" height="15.0" fill="rgb(213,87,7)" rx="2" ry="2" />
<text  x="14.41" y="159.5" ></text>
</g>
<g >
<title>adoc`std::sys_common::backtrace::__rust_begin_short_backtrace::hd7976b1a5209019b (104 samples, 0.16%)</title><rect x="10.0" y="197" width="1.9" height="15.0" fill="rgb(210,161,27)" rx="2" ry="2" />
<text  x="13.04" y="207.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (39 samples, 0.06%)</title><rect x="1139.4" y="149" width="0.7" height="15.0" fill="rgb(249,155,38)" rx="2" ry="2" />
<text  x="1142.41" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_no_lock (71 samples, 0.11%)</title><rect x="1123.7" y="117" width="1.3" height="15.0" fill="rgb(223,219,45)" rx="2" ry="2" />
<text  x="1126.67" y="127.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (50,112 samples, 77.90%)</title><rect x="85.2" y="133" width="919.2" height="15.0" fill="rgb(220,124,51)" rx="2" ry="2" />
<text  x="88.17" y="143.5" >libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell</text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (638 samples, 0.99%)</title><rect x="1105.1" y="133" width="11.7" height="15.0" fill="rgb(249,9,26)" rx="2" ry="2" />
<text  x="1108.07" y="143.5" ></text>
</g>
<g >
<title>adoc`adoc::p20::get_number::h507fdc4eef9c0f58 (4,469 samples, 6.95%)</title><rect x="1004.8" y="149" width="82.0" height="15.0" fill="rgb(238,10,0)" rx="2" ry="2" />
<text  x="1007.80" y="159.5" >adoc`adoc..</text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (117 samples, 0.18%)</title><rect x="83.0" y="101" width="2.1" height="15.0" fill="rgb(253,11,0)" rx="2" ry="2" />
<text  x="85.99" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_free_definite_size (12 samples, 0.02%)</title><rect x="1189.6" y="165" width="0.2" height="15.0" fill="rgb(250,201,20)" rx="2" ry="2" />
<text  x="1192.58" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (1,202 samples, 1.87%)</title><rect x="1064.3" y="117" width="22.0" height="15.0" fill="rgb(244,11,26)" rx="2" ry="2" />
<text  x="1067.29" y="127.5" >l..</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="1124.7" y="101" width="0.3" height="15.0" fill="rgb(239,43,37)" rx="2" ry="2" />
<text  x="1127.70" y="111.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (39 samples, 0.06%)</title><rect x="1104.4" y="133" width="0.7" height="15.0" fill="rgb(221,184,17)" rx="2" ry="2" />
<text  x="1107.35" y="143.5" ></text>
</g>
<g >
<title>adoc`main (64,316 samples, 99.98%)</title><rect x="10.0" y="245" width="1179.8" height="15.0" fill="rgb(221,185,9)" rx="2" ry="2" />
<text  x="13.04" y="255.5" >adoc`main</text>
</g>
<g >
<title>adoc`adoc::p20::main::h2399f3a7493a6155 (64,210 samples, 99.82%)</title><rect x="11.9" y="181" width="1177.9" height="15.0" fill="rgb(213,151,49)" rx="2" ry="2" />
<text  x="14.94" y="191.5" >adoc`adoc::p20::main::h2399f3a7493a6155</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (14 samples, 0.02%)</title><rect x="1046.1" y="37" width="0.2" height="15.0" fill="rgb(249,194,21)" rx="2" ry="2" />
<text  x="1049.09" y="47.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free_medium (46 samples, 0.07%)</title><rect x="1058.0" y="133" width="0.8" height="15.0" fill="rgb(207,198,15)" rx="2" ry="2" />
<text  x="1060.98" y="143.5" ></text>
</g>
<g >
<title>adoc`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h2d34e96afab5455c (104 samples, 0.16%)</title><rect x="10.0" y="213" width="1.9" height="15.0" fill="rgb(205,201,0)" rx="2" ry="2" />
<text  x="13.04" y="223.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`realloc (40 samples, 0.06%)</title><rect x="1045.8" y="101" width="0.7" height="15.0" fill="rgb(244,34,52)" rx="2" ry="2" />
<text  x="1048.78" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`medium_size (67 samples, 0.10%)</title><rect x="1054.5" y="117" width="1.2" height="15.0" fill="rgb(236,172,45)" rx="2" ry="2" />
<text  x="1057.51" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (63 samples, 0.10%)</title><rect x="1056.7" y="101" width="1.2" height="15.0" fill="rgb(243,3,42)" rx="2" ry="2" />
<text  x="1059.70" y="111.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (44 samples, 0.07%)</title><rect x="1160.9" y="117" width="0.8" height="15.0" fill="rgb(229,122,21)" rx="2" ry="2" />
<text  x="1163.89" y="127.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (41 samples, 0.06%)</title><rect x="1046.6" y="133" width="0.8" height="15.0" fill="rgb(254,221,24)" rx="2" ry="2" />
<text  x="1049.64" y="143.5" ></text>
</g>
<g >
<title>adoc`__rust_alloc (8 samples, 0.01%)</title><rect x="1004.6" y="149" width="0.1" height="15.0" fill="rgb(223,68,47)" rx="2" ry="2" />
<text  x="1007.58" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (616 samples, 0.96%)</title><rect x="1125.0" y="133" width="11.3" height="15.0" fill="rgb(254,133,52)" rx="2" ry="2" />
<text  x="1127.97" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (66 samples, 0.10%)</title><rect x="1044.5" y="53" width="1.2" height="15.0" fill="rgb(252,181,40)" rx="2" ry="2" />
<text  x="1047.52" y="63.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (663 samples, 1.03%)</title><rect x="1175.1" y="133" width="12.2" height="15.0" fill="rgb(241,40,53)" rx="2" ry="2" />
<text  x="1178.10" y="143.5" ></text>
</g>
<g >
<title>adoc`std::sys_common::backtrace::__rust_begin_short_backtrace::headdfe89a99a535c (64,212 samples, 99.82%)</title><rect x="11.9" y="197" width="1177.9" height="15.0" fill="rgb(224,20,40)" rx="2" ry="2" />
<text  x="14.94" y="207.5" >adoc`std::sys_common::backtrace::__rust_begin_short_backtrace::headdfe89a99a535c</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (434 samples, 0.67%)</title><rect x="1078.3" y="69" width="7.9" height="15.0" fill="rgb(246,167,37)" rx="2" ry="2" />
<text  x="1081.27" y="79.5" ></text>
</g>
<g >
<title>adoc`_$LT$hashbrown..raw..RawIterHash$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::ha37aa9d7f01096c3 (119 samples, 0.18%)</title><rect x="80.3" y="149" width="2.2" height="15.0" fill="rgb(242,113,54)" rx="2" ry="2" />
<text  x="83.31" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_free_definite_size (20 samples, 0.03%)</title><rect x="1187.5" y="149" width="0.3" height="15.0" fill="rgb(225,148,10)" rx="2" ry="2" />
<text  x="1190.45" y="159.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (13 samples, 0.02%)</title><rect x="1152.5" y="85" width="0.2" height="15.0" fill="rgb(247,100,30)" rx="2" ry="2" />
<text  x="1155.45" y="95.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (54 samples, 0.08%)</title><rect x="1149.5" y="133" width="1.0" height="15.0" fill="rgb(249,205,31)" rx="2" ry="2" />
<text  x="1152.48" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_no_lock (98 samples, 0.15%)</title><rect x="1172.8" y="133" width="1.8" height="15.0" fill="rgb(246,204,51)" rx="2" ry="2" />
<text  x="1175.83" y="143.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`write (8 samples, 0.01%)</title><rect x="1188.9" y="85" width="0.2" height="15.0" fill="rgb(206,109,48)" rx="2" ry="2" />
<text  x="1191.92" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (75 samples, 0.12%)</title><rect x="1165.3" y="117" width="1.4" height="15.0" fill="rgb(210,58,31)" rx="2" ry="2" />
<text  x="1168.35" y="127.5" ></text>
</g>
<g >
<title>adoc`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::he1f612f637d0bb0f (64,212 samples, 99.82%)</title><rect x="11.9" y="213" width="1177.9" height="15.0" fill="rgb(238,126,18)" rx="2" ry="2" />
<text  x="14.94" y="223.5" >adoc`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::he1f612f637d0bb0f</text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_free_definite_size (13 samples, 0.02%)</title><rect x="1053.5" y="133" width="0.3" height="15.0" fill="rgb(207,49,41)" rx="2" ry="2" />
<text  x="1056.52" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (7 samples, 0.01%)</title><rect x="1057.9" y="117" width="0.1" height="15.0" fill="rgb(225,200,41)" rx="2" ry="2" />
<text  x="1060.85" y="127.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (13 samples, 0.02%)</title><rect x="1163.5" y="101" width="0.3" height="15.0" fill="rgb(213,151,33)" rx="2" ry="2" />
<text  x="1166.55" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free_tiny (277 samples, 0.43%)</title><rect x="1058.8" y="133" width="5.1" height="15.0" fill="rgb(213,107,39)" rx="2" ry="2" />
<text  x="1061.82" y="143.5" ></text>
</g>
<g >
<title>adoc`std::io::stdio::_print::h2fa43caf447f53e2 (9 samples, 0.01%)</title><rect x="1188.9" y="165" width="0.2" height="15.0" fill="rgb(213,149,53)" rx="2" ry="2" />
<text  x="1191.90" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_free_definite_size (12 samples, 0.02%)</title><rect x="1116.8" y="133" width="0.2" height="15.0" fill="rgb(226,103,54)" rx="2" ry="2" />
<text  x="1119.77" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="1136.5" y="133" width="0.1" height="15.0" fill="rgb(218,51,8)" rx="2" ry="2" />
<text  x="1139.49" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (72 samples, 0.11%)</title><rect x="1044.4" y="101" width="1.3" height="15.0" fill="rgb(250,90,47)" rx="2" ry="2" />
<text  x="1047.41" y="111.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::h450abddfe57ba61e (125 samples, 0.19%)</title><rect x="1150.5" y="133" width="2.3" height="15.0" fill="rgb(244,126,5)" rx="2" ry="2" />
<text  x="1153.47" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (534 samples, 0.83%)</title><rect x="1126.3" y="85" width="9.8" height="15.0" fill="rgb(219,93,10)" rx="2" ry="2" />
<text  x="1129.33" y="95.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_insert_hash::h6c7a16b12959b523 (319 samples, 0.50%)</title><rect x="1153.5" y="149" width="5.9" height="15.0" fill="rgb(227,5,13)" rx="2" ry="2" />
<text  x="1156.53" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (12 samples, 0.02%)</title><rect x="1119.3" y="117" width="0.2" height="15.0" fill="rgb(225,88,6)" rx="2" ry="2" />
<text  x="1122.27" y="127.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (37 samples, 0.06%)</title><rect x="1152.0" y="101" width="0.7" height="15.0" fill="rgb(213,201,47)" rx="2" ry="2" />
<text  x="1155.01" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="1166.7" y="133" width="0.2" height="15.0" fill="rgb(244,119,34)" rx="2" ry="2" />
<text  x="1169.72" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (15 samples, 0.02%)</title><rect x="1046.1" y="53" width="0.2" height="15.0" fill="rgb(217,217,5)" rx="2" ry="2" />
<text  x="1049.07" y="63.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="1086.1" y="53" width="0.1" height="15.0" fill="rgb(241,208,18)" rx="2" ry="2" />
<text  x="1089.06" y="63.5" ></text>
</g>
<g >
<title>adoc`core::fmt::write::h2d5ecb4b9764759c (9 samples, 0.01%)</title><rect x="1188.9" y="133" width="0.2" height="15.0" fill="rgb(212,77,8)" rx="2" ry="2" />
<text  x="1191.90" y="143.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::reserve_rehash::hdae5a7173733788d (83 samples, 0.13%)</title><rect x="1162.3" y="133" width="1.5" height="15.0" fill="rgb(206,166,42)" rx="2" ry="2" />
<text  x="1165.28" y="143.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (139 samples, 0.22%)</title><rect x="1051.0" y="117" width="2.5" height="15.0" fill="rgb(223,195,41)" rx="2" ry="2" />
<text  x="1053.97" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (22 samples, 0.03%)</title><rect x="1174.2" y="117" width="0.4" height="15.0" fill="rgb(238,89,29)" rx="2" ry="2" />
<text  x="1177.22" y="127.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (334 samples, 0.52%)</title><rect x="1047.4" y="133" width="6.1" height="15.0" fill="rgb(243,58,4)" rx="2" ry="2" />
<text  x="1050.40" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (602 samples, 0.94%)</title><rect x="1176.0" y="117" width="11.0" height="15.0" fill="rgb(254,14,44)" rx="2" ry="2" />
<text  x="1178.99" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (8 samples, 0.01%)</title><rect x="1189.4" y="165" width="0.2" height="15.0" fill="rgb(231,59,54)" rx="2" ry="2" />
<text  x="1192.43" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (70 samples, 0.11%)</title><rect x="1044.4" y="69" width="1.3" height="15.0" fill="rgb(249,34,15)" rx="2" ry="2" />
<text  x="1047.44" y="79.5" ></text>
</g>
<g >
<title>adoc`_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$::write_str::hc79aa11862957b42 (8 samples, 0.01%)</title><rect x="1188.9" y="117" width="0.2" height="15.0" fill="rgb(225,160,35)" rx="2" ry="2" />
<text  x="1191.92" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`small_size (40 samples, 0.06%)</title><rect x="1055.7" y="117" width="0.8" height="15.0" fill="rgb(229,141,48)" rx="2" ry="2" />
<text  x="1058.74" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (28 samples, 0.04%)</title><rect x="1063.1" y="101" width="0.5" height="15.0" fill="rgb(239,44,37)" rx="2" ry="2" />
<text  x="1066.08" y="111.5" ></text>
</g>
<g >
<title>adoc`_$LT$$RF$std..io..stdio..Stdout$u20$as$u20$std..io..Write$GT$::write_fmt::h1e6a5219f9c88a91 (9 samples, 0.01%)</title><rect x="1188.9" y="149" width="0.2" height="15.0" fill="rgb(245,110,2)" rx="2" ry="2" />
<text  x="1191.90" y="159.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::h450abddfe57ba61e (130 samples, 0.20%)</title><rect x="1159.4" y="149" width="2.4" height="15.0" fill="rgb(247,0,5)" rx="2" ry="2" />
<text  x="1162.38" y="159.5" ></text>
</g>
<g >
<title>adoc`alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h686653194be36d1f (130 samples, 0.20%)</title><rect x="1044.2" y="133" width="2.4" height="15.0" fill="rgb(246,43,46)" rx="2" ry="2" />
<text  x="1047.24" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (1,060 samples, 1.65%)</title><rect x="1066.8" y="101" width="19.4" height="15.0" fill="rgb(218,225,19)" rx="2" ry="2" />
<text  x="1069.78" y="111.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (6 samples, 0.01%)</title><rect x="1151.0" y="117" width="0.1" height="15.0" fill="rgb(248,34,52)" rx="2" ry="2" />
<text  x="1154.02" y="127.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::reserve_rehash::hf9ff11e1be913a86 (88 samples, 0.14%)</title><rect x="1160.2" y="133" width="1.6" height="15.0" fill="rgb(222,55,16)" rx="2" ry="2" />
<text  x="1163.15" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (555 samples, 0.86%)</title><rect x="1125.9" y="101" width="10.2" height="15.0" fill="rgb(239,212,33)" rx="2" ry="2" />
<text  x="1128.94" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free (152 samples, 0.24%)</title><rect x="1164.1" y="149" width="2.8" height="15.0" fill="rgb(230,4,40)" rx="2" ry="2" />
<text  x="1167.08" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free_tiny (299 samples, 0.46%)</title><rect x="1119.5" y="133" width="5.5" height="15.0" fill="rgb(207,143,38)" rx="2" ry="2" />
<text  x="1122.49" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_malloc (26 samples, 0.04%)</title><rect x="1125.5" y="101" width="0.4" height="15.0" fill="rgb(251,32,40)" rx="2" ry="2" />
<text  x="1128.47" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free_tiny (423 samples, 0.66%)</title><rect x="1166.9" y="149" width="7.7" height="15.0" fill="rgb(223,201,45)" rx="2" ry="2" />
<text  x="1169.87" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (690 samples, 1.07%)</title><rect x="1174.6" y="149" width="12.7" height="15.0" fill="rgb(216,103,30)" rx="2" ry="2" />
<text  x="1177.63" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.02%)</title><rect x="1086.4" y="133" width="0.2" height="15.0" fill="rgb(244,216,48)" rx="2" ry="2" />
<text  x="1089.41" y="143.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::reserve_rehash::hf9ff11e1be913a86 (89 samples, 0.14%)</title><rect x="1151.1" y="117" width="1.7" height="15.0" fill="rgb(244,137,28)" rx="2" ry="2" />
<text  x="1154.13" y="127.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (289 samples, 0.45%)</title><rect x="1111.5" y="117" width="5.3" height="15.0" fill="rgb(248,147,29)" rx="2" ry="2" />
<text  x="1114.47" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free (230 samples, 0.36%)</title><rect x="1053.8" y="133" width="4.2" height="15.0" fill="rgb(210,198,19)" rx="2" ry="2" />
<text  x="1056.76" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (75 samples, 0.12%)</title><rect x="1056.5" y="117" width="1.4" height="15.0" fill="rgb(223,33,3)" rx="2" ry="2" />
<text  x="1059.48" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (70 samples, 0.11%)</title><rect x="1185.7" y="85" width="1.3" height="15.0" fill="rgb(209,138,41)" rx="2" ry="2" />
<text  x="1188.74" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (12 samples, 0.02%)</title><rect x="1136.3" y="133" width="0.2" height="15.0" fill="rgb(244,144,43)" rx="2" ry="2" />
<text  x="1139.27" y="143.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::haad3fab9782a6220 (111 samples, 0.17%)</title><rect x="1161.8" y="149" width="2.0" height="15.0" fill="rgb(244,209,15)" rx="2" ry="2" />
<text  x="1164.77" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.02%)</title><rect x="1124.4" y="101" width="0.3" height="15.0" fill="rgb(218,123,17)" rx="2" ry="2" />
<text  x="1127.42" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_no_lock (99 samples, 0.15%)</title><rect x="1062.1" y="117" width="1.8" height="15.0" fill="rgb(241,72,0)" rx="2" ry="2" />
<text  x="1065.09" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (7 samples, 0.01%)</title><rect x="1086.6" y="133" width="0.1" height="15.0" fill="rgb(242,22,2)" rx="2" ry="2" />
<text  x="1089.61" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_malloc (30 samples, 0.05%)</title><rect x="1175.4" y="117" width="0.6" height="15.0" fill="rgb(229,34,5)" rx="2" ry="2" />
<text  x="1178.44" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_realloc (20 samples, 0.03%)</title><rect x="1046.0" y="69" width="0.4" height="15.0" fill="rgb(246,170,5)" rx="2" ry="2" />
<text  x="1049.00" y="79.5" ></text>
</g>
<g >
<title>all (64,327 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(247,220,46)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>adoc`adoc::p20::step::hda229c9a7676ecad (64,035 samples, 99.55%)</title><rect x="13.9" y="165" width="1174.6" height="15.0" fill="rgb(242,156,18)" rx="2" ry="2" />
<text  x="16.85" y="175.5" >adoc`adoc::p20::step::hda229c9a7676ecad</text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (42 samples, 0.07%)</title><rect x="1152.8" y="149" width="0.7" height="15.0" fill="rgb(232,41,44)" rx="2" ry="2" />
<text  x="1155.76" y="159.5" ></text>
</g>
<g >
<title>adoc`alloc::raw_vec::finish_grow::h910ecb32dd4d8f4e (120 samples, 0.19%)</title><rect x="1044.3" y="117" width="2.2" height="15.0" fill="rgb(224,45,34)" rx="2" ry="2" />
<text  x="1047.31" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (27 samples, 0.04%)</title><rect x="1045.2" y="37" width="0.5" height="15.0" fill="rgb(214,193,42)" rx="2" ry="2" />
<text  x="1048.23" y="47.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_malloc (97 samples, 0.15%)</title><rect x="1065.0" y="101" width="1.8" height="15.0" fill="rgb(207,21,47)" rx="2" ry="2" />
<text  x="1068.01" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (9 samples, 0.01%)</title><rect x="1187.3" y="149" width="0.2" height="15.0" fill="rgb(208,129,48)" rx="2" ry="2" />
<text  x="1190.29" y="159.5" ></text>
</g>
<g >
<title>adoc`alloc::slice::merge_sort::hf4c7bd66931ad16c (149 samples, 0.23%)</title><rect x="1136.7" y="149" width="2.7" height="15.0" fill="rgb(222,138,48)" rx="2" ry="2" />
<text  x="1139.67" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (19 samples, 0.03%)</title><rect x="1135.8" y="53" width="0.3" height="15.0" fill="rgb(224,214,8)" rx="2" ry="2" />
<text  x="1138.78" y="63.5" ></text>
</g>
<g >
<title>adoc`_$LT$std..io..stdio..StdoutLock$u20$as$u20$std..io..Write$GT$::write_all::h356cf099e2cce043 (8 samples, 0.01%)</title><rect x="1188.9" y="101" width="0.2" height="15.0" fill="rgb(233,221,36)" rx="2" ry="2" />
<text  x="1191.92" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (125 samples, 0.19%)</title><rect x="82.8" y="133" width="2.3" height="15.0" fill="rgb(217,109,50)" rx="2" ry="2" />
<text  x="85.84" y="143.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::reserve_rehash::h96ad2417884a47cc (25 samples, 0.04%)</title><rect x="11.4" y="133" width="0.5" height="15.0" fill="rgb(250,47,52)" rx="2" ry="2" />
<text  x="14.45" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (1,227 samples, 1.91%)</title><rect x="1063.9" y="133" width="22.5" height="15.0" fill="rgb(248,150,27)" rx="2" ry="2" />
<text  x="1066.90" y="143.5" >l..</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,046 samples, 1.63%)</title><rect x="1067.0" y="85" width="19.2" height="15.0" fill="rgb(228,160,16)" rx="2" ry="2" />
<text  x="1070.04" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`medium_malloc_should_clear (112 samples, 0.17%)</title><rect x="83.1" y="85" width="2.0" height="15.0" fill="rgb(244,94,3)" rx="2" ry="2" />
<text  x="86.08" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (72 samples, 0.11%)</title><rect x="1044.4" y="85" width="1.3" height="15.0" fill="rgb(226,113,18)" rx="2" ry="2" />
<text  x="1047.41" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_free_definite_size (11 samples, 0.02%)</title><rect x="1163.9" y="149" width="0.2" height="15.0" fill="rgb(242,22,48)" rx="2" ry="2" />
<text  x="1166.88" y="159.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.04%)</title><rect x="1188.0" y="149" width="0.5" height="15.0" fill="rgb(229,98,20)" rx="2" ry="2" />
<text  x="1191.04" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="1086.2" y="101" width="0.1" height="15.0" fill="rgb(214,102,0)" rx="2" ry="2" />
<text  x="1089.23" y="111.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_hash::h9f3a3caab2fccfda (42 samples, 0.07%)</title><rect x="1163.0" y="117" width="0.8" height="15.0" fill="rgb(245,20,10)" rx="2" ry="2" />
<text  x="1166.02" y="127.5" ></text>
</g>
<g >
<title>adoc`std::rt::lang_start_internal::h05aa3173240f4b0d (64,316 samples, 99.98%)</title><rect x="10.0" y="229" width="1179.8" height="15.0" fill="rgb(217,224,33)" rx="2" ry="2" />
<text  x="13.04" y="239.5" >adoc`std::rt::lang_start_internal::h05aa3173240f4b0d</text>
</g>
<g >
<title>adoc`hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::insert::hc56c3ad887ea994c (689 samples, 1.07%)</title><rect x="1140.1" y="149" width="12.7" height="15.0" fill="rgb(208,227,36)" rx="2" ry="2" />
<text  x="1143.12" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_malloc (18 samples, 0.03%)</title><rect x="1064.0" y="117" width="0.3" height="15.0" fill="rgb(223,74,23)" rx="2" ry="2" />
<text  x="1066.96" y="127.5" ></text>
</g>
<g >
<title>adoc`adoc::p20::step::h78265ab9dff26d23 (100 samples, 0.16%)</title><rect x="10.1" y="165" width="1.8" height="15.0" fill="rgb(234,59,26)" rx="2" ry="2" />
<text  x="13.09" y="175.5" ></text>
</g>
<g >
<title>adoc`adoc::p20::main::h86a8d4cf075b5ab9 (104 samples, 0.16%)</title><rect x="10.0" y="181" width="1.9" height="15.0" fill="rgb(218,49,0)" rx="2" ry="2" />
<text  x="13.04" y="191.5" ></text>
</g>
<g >
<title>adoc`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$i32$GT$::hash::h121053818f08a4f0 (8 samples, 0.01%)</title><rect x="1161.5" y="101" width="0.2" height="15.0" fill="rgb(229,163,21)" rx="2" ry="2" />
<text  x="1164.55" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (29 samples, 0.05%)</title><rect x="1173.7" y="117" width="0.5" height="15.0" fill="rgb(210,12,32)" rx="2" ry="2" />
<text  x="1176.69" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free (136 samples, 0.21%)</title><rect x="1117.0" y="133" width="2.5" height="15.0" fill="rgb(220,37,28)" rx="2" ry="2" />
<text  x="1119.99" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (17 samples, 0.03%)</title><rect x="1063.6" y="101" width="0.3" height="15.0" fill="rgb(219,132,23)" rx="2" ry="2" />
<text  x="1066.59" y="111.5" ></text>
</g>
<g >
<title>adoc`adoc::p20::get_number::hffb7b77872dcf378 (2,718 samples, 4.23%)</title><rect x="1086.8" y="149" width="49.8" height="15.0" fill="rgb(230,88,39)" rx="2" ry="2" />
<text  x="1089.78" y="159.5" >adoc`..</text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (79 samples, 0.12%)</title><rect x="1117.8" y="117" width="1.5" height="15.0" fill="rgb(226,90,40)" rx="2" ry="2" />
<text  x="1120.82" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free (13 samples, 0.02%)</title><rect x="1189.1" y="165" width="0.3" height="15.0" fill="rgb(251,66,42)" rx="2" ry="2" />
<text  x="1192.12" y="175.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`__exit (9 samples, 0.01%)</title><rect x="1189.8" y="245" width="0.2" height="15.0" fill="rgb(218,155,14)" rx="2" ry="2" />
<text  x="1192.83" y="255.5" ></text>
</g>
<g >
<title>adoc`hashbrown::map::make_insert_hash::h6c7a16b12959b523 (11 samples, 0.02%)</title><rect x="1188.5" y="165" width="0.2" height="15.0" fill="rgb(206,46,12)" rx="2" ry="2" />
<text  x="1191.53" y="175.5" ></text>
</g>
<g >
<title>adoc`_$LT$hashbrown..raw..RawTable$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$::clone::h0bc18c1ebf8dc301 (50,258 samples, 78.13%)</title><rect x="82.5" y="149" width="921.9" height="15.0" fill="rgb(213,80,14)" rx="2" ry="2" />
<text  x="85.49" y="159.5" >adoc`_$LT$hashbrown..raw..RawTable$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$::clone::h0bc18c1ebf8dc301</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (582 samples, 0.90%)</title><rect x="1176.4" y="101" width="10.6" height="15.0" fill="rgb(237,195,46)" rx="2" ry="2" />
<text  x="1179.35" y="111.5" ></text>
</g>
<g >
<title>adoc`__rdl_dealloc (6 samples, 0.01%)</title><rect x="1004.5" y="149" width="0.1" height="15.0" fill="rgb(216,44,50)" rx="2" ry="2" />
<text  x="1007.47" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (60 samples, 0.09%)</title><rect x="1135.0" y="69" width="1.1" height="15.0" fill="rgb(237,31,40)" rx="2" ry="2" />
<text  x="1138.02" y="79.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (604 samples, 0.94%)</title><rect x="1125.1" y="117" width="11.1" height="15.0" fill="rgb(214,78,37)" rx="2" ry="2" />
<text  x="1128.14" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (84 samples, 0.13%)</title><rect x="1165.2" y="133" width="1.5" height="15.0" fill="rgb(231,48,25)" rx="2" ry="2" />
<text  x="1168.18" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (74 samples, 0.12%)</title><rect x="1117.9" y="101" width="1.4" height="15.0" fill="rgb(230,36,19)" rx="2" ry="2" />
<text  x="1120.91" y="111.5" ></text>
</g>
<g >
<title>adoc`hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::haad3fab9782a6220 (8 samples, 0.01%)</title><rect x="1188.8" y="165" width="0.1" height="15.0" fill="rgb(221,59,3)" rx="2" ry="2" />
<text  x="1191.75" y="175.5" ></text>
</g>
<g >
<title>adoc`_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$::from_iter::h8909f5018f67e442 (52 samples, 0.08%)</title><rect x="12.0" y="165" width="0.9" height="15.0" fill="rgb(217,226,7)" rx="2" ry="2" />
<text  x="14.98" y="175.5" ></text>
</g>
<g >
<title>adoc`0x1 (64,327 samples, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(214,5,51)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >adoc`0x1</text>
</g>
</g>
</svg>
